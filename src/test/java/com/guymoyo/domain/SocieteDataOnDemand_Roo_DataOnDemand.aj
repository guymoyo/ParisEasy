// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.guymoyo.domain;

import com.guymoyo.domain.Societe;
import com.guymoyo.domain.SocieteDataOnDemand;
import com.guymoyo.service.SocieteService;
import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect SocieteDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SocieteDataOnDemand: @Component;
    
    private Random SocieteDataOnDemand.rnd = new SecureRandom();
    
    private List<Societe> SocieteDataOnDemand.data;
    
    @Autowired
    SocieteService SocieteDataOnDemand.societeService;
    
    public Societe SocieteDataOnDemand.getNewTransientSociete(int index) {
        Societe obj = new Societe();
        setAddress(obj, index);
        setCity(obj, index);
        setCodePostal(obj, index);
        setEmail(obj, index);
        setFax(obj, index);
        setName(obj, index);
        setPhoneNumber(obj, index);
        setTVA(obj, index);
        setWebPage(obj, index);
        return obj;
    }
    
    public void SocieteDataOnDemand.setAddress(Societe obj, int index) {
        String Address = "Address_" + index;
        obj.setAddress(Address);
    }
    
    public void SocieteDataOnDemand.setCity(Societe obj, int index) {
        String City = "City_" + index;
        obj.setCity(City);
    }
    
    public void SocieteDataOnDemand.setCodePostal(Societe obj, int index) {
        String CodePostal = "CodePostal_" + index;
        obj.setCodePostal(CodePostal);
    }
    
    public void SocieteDataOnDemand.setEmail(Societe obj, int index) {
        String Email = "foo" + index + "@bar.com";
        obj.setEmail(Email);
    }
    
    public void SocieteDataOnDemand.setFax(Societe obj, int index) {
        String Fax = "Fax_" + index;
        obj.setFax(Fax);
    }
    
    public void SocieteDataOnDemand.setName(Societe obj, int index) {
        String Name = "Name_" + index;
        obj.setName(Name);
    }
    
    public void SocieteDataOnDemand.setPhoneNumber(Societe obj, int index) {
        String PhoneNumber = "PhoneNumber_" + index;
        obj.setPhoneNumber(PhoneNumber);
    }
    
    public void SocieteDataOnDemand.setTVA(Societe obj, int index) {
        BigDecimal TVA = BigDecimal.valueOf(index);
        obj.setTVA(TVA);
    }
    
    public void SocieteDataOnDemand.setWebPage(Societe obj, int index) {
        String WebPage = "WebPage_" + index;
        obj.setWebPage(WebPage);
    }
    
    public Societe SocieteDataOnDemand.getSpecificSociete(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Societe obj = data.get(index);
        Long id = obj.getId();
        return societeService.findSociete(id);
    }
    
    public Societe SocieteDataOnDemand.getRandomSociete() {
        init();
        Societe obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return societeService.findSociete(id);
    }
    
    public boolean SocieteDataOnDemand.modifySociete(Societe obj) {
        return false;
    }
    
    public void SocieteDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = societeService.findSocieteEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Societe' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Societe>();
        for (int i = 0; i < 10; i++) {
            Societe obj = getNewTransientSociete(i);
            try {
                societeService.saveSociete(obj);
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
